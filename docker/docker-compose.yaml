version: '3.3'
services:
    app:
#      image: '22071996/multi-module-test:3'
      build:
        context: ../
        dockerfile: ./docker/app/Dockerfile
      container_name: app_test
      expose:
        - 8080
      ports:
        - 8080:8080
      environment:
        - SPRING_DATASOURCE_URL=jdbc:mysql://db-test:3306/db-test
        - SPRING_DATASOURCE_USERNAME=test
        - SPRING_DATASOURCE_PASSWORD=test
        - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
        - MANAGEMENT_METRICS_EXPORT_INFLUX_DB=db0
        - MANAGEMENT_METRICS_EXPORT_INFLUX_URI=http://influxdb:8086
        - MANAGEMENT_METRICS_EXPORT_INFLUX_USER-name=admin
        - MANAGEMENT_METRICS_EXPORT_INFLUX_PASSWORD=admin
        - MANAGEMENT_METRICS_EXPORT_INFLUX_ENABLED=true
        - SPRING_MAIL_HOST=mailhog
        - SPRING_MAIL_PORT=1025
        - SPRING_MAIL_USERNAME=
        - SPRING_MAIL_PASSSWORD=
        - SPRING_MAIL_TEST_CONNECTION=true
        - SPIRNG_RABBITMQ_USERNAME=user
        - SPRING_RABBITMQ_PASSWORD=password
        - SPRING_RABBITMQ_HOST=rabbitmq
        - SPRING_RABBITMQ_PORT=5672
        - LOGSTASH_HOST=logstash
        - LOGSTASH_PORT=5000
        - ELASTICSEARCH_HOST=elasticsearch
        - ELASTICSEARCH_USERNAME=elastic
        - ELASTICSEARCH_PASSWORD=changeme
      labels:
        collect_logs_with_filebeat: "true"
        decode_log_event_to_json_object: "true"
      restart: unless-stopped
      depends_on:
        - db-test
      links:
        - db-test
      networks:
        - test
    filebeat:
      build:
        context: ./filebeat
        dockerfile: ./Dockerfile
      container_name: filebeat
      volumes:
        - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
        - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
      user: root                                                             # Allow access to log files and docker.sock
      depends_on:
        - logstash
      networks:
        - test
    db-test:
      image: mysql:5.7
      restart: always
      environment:
        MYSQL_ROOT_PASSWORD: 'password'
        MYSQL_DATABASE: 'db-test'
        MYSQL_USER: 'test'
        MYSQL_PASSWORD: 'test'
      ports:
        - '3306:3306'
      networks:
        - test
    db-liquibase:
      build:
        context: ../
        dockerfile: ./docker/db_liquibase/Dockerfile
        args:
          SCHEMA_JAR_DIR: ${SCHEMA_JAR_DIR}
          SCHEMA_JAR: ${SCHEMA_JAR}
      depends_on:
        - db-test
      container_name: db-liquibase
      environment:
        - LIQUIBASE_URL=jdbc:mysql://db-test:3306/db-test
        - LIQUIBASE_USERNAME=test
        - LIQUIBASE_PASSWORD=test
        - LIQUIBASE_DRIVER=com.mysql.cj.jdbc.Driver
        - LIQUIBASE_CLASSPATH=/mysql-connector-java-8.0.25.jar
        - LIQUIBASE_CHANGELOG=/liquibase/changelog-master.xml
      networks:
        - test
    grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - '3000:3000'
      depends_on:
        - influxdb
      environment:
        - GF_SECURITY_ADMIN_USER=grafana
        - GF_SECURITY_ADMIN_PASSWORD=grafana
      volumes:
        - grafana-storage:/var/lib/grafana
        - ./grafana/provisioning/dashboard:/etc/grafana/provisioning/dashboards
        - ./grafana/provisioning/datasource:/etc/grafana/provisioning/datasources
      networks:
        - test
    influxdb:
      container_name: influxdb
      image: influxdb:1.7.10-alpine
      ports:
        - '8086:8086'
      volumes:
        - influxdb-storage:/var/lib/influxdb
      networks:
        - test
      environment:
        - INFLUXDB_DB=db0
        - INFLUXDB_ADMIN_USER=adminn
        - INFLUXDB_ADMIN_PASSWORD=adminn
    prometheus:
      image: prom/prometheus
      container_name: prometheus
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
      networks:
        - test
    mailhog:
      image: mailhog/mailhog
      logging:
        driver: 'none'  # disable saving logs
      ports:
        - 1025:1025 # smtp server
        - 8025:8025 # web ui
      networks:
        - test
    rabbitmq:
      image: rabbitmq:management
      ports:
        - "5672:5672"
        - "15672:15672"
      environment:
        - RABBITMQ_DEFAULT_USER=user
        - RABBITMQ_DEFAULT_PASS=password
      networks:
        - test
      volumes:
        - rabbitmq-storage:/var/lib/rabbitmq
    elasticsearch:
      image: elasticsearch:$ELK_VERSION
      volumes:
        - elasticsearch:/usr/share/elasticsearch/data
      environment:
        ES_JAVA_OPTS: "-Xmx256m -Xms256m"
        # Note: currently there doesn't seem to be a way to change the default user for Elasticsearch
        ELASTIC_PASSWORD: $ELASTIC_PASSWORD
        # Use single node discovery in order to disable production mode and avoid bootstrap checks
        # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
        discovery.type: single-node
        # X-Pack security needs to be enabled for Elasticsearch to actually authenticate requests
        xpack.security.enabled: "true"
      ports:
        - "9200:9200"
        - "9300:9300"
      healthcheck:
        test: "wget -q -O - http://$ELASTIC_USER:$ELASTIC_PASSWORD@localhost:9200/_cat/health"
        interval: 1s
        timeout: 30s
        retries: 300
      restart: unless-stopped
      networks:
        - test
    elasticsearch-mapping-init:
      build: elasticsearch_mapping_init
      links:
        - elasticsearch
      depends_on:
        - elasticsearch
      networks:
        - test
    elasticsearch-test-data:
      build: elasticsearch_test_data
      links:
        - elasticsearch
      depends_on:
        - elasticsearch-mapping-init
        - elasticsearch
      networks:
        - test
    kibana:
      image: kibana:${ELK_VERSION}
      environment:
        ELASTICSEARCH_USERNAME: $ELASTIC_USER
        ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
        # Because Elasticsearch is running in a containerized environment
        # (setting this to false will result in CPU stats not being correct in the Monitoring UI):
        XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "true"
      ports:
        - "5601:5601"
      networks:
        - test
      restart: unless-stopped
      depends_on:
        - elasticsearch
        - logstash
    logstash:
      image: logstash:$ELK_VERSION
      ports:
        - "5000:5000"
        - "9600:9600"
      environment:
        LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        ELASTIC_USER: $ELASTIC_USER
        ELASTIC_PASSWORD: $ELASTIC_PASSWORD
        XPACK_MONITORING_ELASTICSEARCH_USERNAME: $ELASTIC_USER
        XPACK_MONITORING_ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
        XPACK_MONITORING_ELASTICSEARCH_HOSTS: "elasticsearch:9200"
        XPACK_MONITORING_ENABLED: "true"
      volumes:
        - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      networks:
        - test
      restart: unless-stopped
      depends_on:
        - elasticsearch
    openldap:
      image: osixia/openldap:1.5.0
      container_name: openldap
      environment:
        - LDAP_ORGANISATION="MyCompany Inc."
        - LDAP_DOMAIN=mycompany.com
      ports:
        - "389:389"
      networks:
        - test
      volumes:
        - ldap:/var/lib/ldap
    phpldapadmin:
      image: osixia/phpldapadmin:0.9.0
      container_name: phpldapadmin
      environment:
        - PHPLDAPADMIN_LDAP_HOSTS=openldap
      ports:
        - "6443:443"
      depends_on:
        - openldap
      networks:
        - test
networks:
  test:
    external: true

volumes:
  rabbitmq-storage:
  influxdb-storage:
  grafana-storage:
  prometheus_data:
  elasticsearch:
  ldap: