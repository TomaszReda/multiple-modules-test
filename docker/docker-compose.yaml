version: '3.3'
services:
    app:
      image: '22071996/multi-module-test:3'
      build:
        context: ../
        dockerfile: ./docker/app/Dockerfile
      container_name: app_test
      expose:
        - 8080
      ports:
        - 8080:8080
      environment:
        - SPRING_DATASOURCE_URL=jdbc:mysql://db-test:3306/db-test
        - SPRING_DATASOURCE_USERNAME=test
        - SPRING_DATASOURCE_PASSWORD=test
        - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
        - MANAGEMENT_METRICS_EXPORT_INFLUX_DB=db0
        - MANAGEMENT_METRICS_EXPORT_INFLUX_URI=http://influxdb:8086
        - MANAGEMENT_METRICS_EXPORT_INFLUX_USER-name=admin
        - MANAGEMENT_METRICS_EXPORT_INFLUX_PASSWORD=admin
        - MANAGEMENT_METRICS_EXPORT_INFLUX_ENABLED=true
        - SPRING_MAIL_HOST=mailhog
        - SPRING_MAIL_PORT=1025
        - SPRING_MAIL_USERNAME=
        - SPRING_MAIL_PASSSWORD=
        - SPRING_MAIL_TEST_CONNECTION=true
        - SPIRNG_RABBITMQ_USERNAME=user
        - SPRING_RABBITMQ_PASSWORD=password
        - SPRING_RABBITMQ_HOST=rabbitmq
        - SPRING_RABBITMQ_PORT=5672
      restart: unless-stopped
      depends_on:
        - db-test
      links:
        - db-test
      networks:
        - test
    db-test:
      image: mysql:5.7
      restart: always
      environment:
        MYSQL_ROOT_PASSWORD: 'password'
        MYSQL_DATABASE: 'db-test'
        MYSQL_USER: 'test'
        MYSQL_PASSWORD: 'test'
      ports:
        - '3306:3306'
      networks:
        - test
    db-liquibase:
      build:
        context: ../
        dockerfile: ./docker/db_liquibase/Dockerfile
        args:
          SCHEMA_JAR_DIR: ${SCHEMA_JAR_DIR}
          SCHEMA_JAR: ${SCHEMA_JAR}
      depends_on:
        - db-test
      container_name: db-liquibase
      environment:
        - LIQUIBASE_URL=jdbc:mysql://db-test:3306/db-test
        - LIQUIBASE_USERNAME=test
        - LIQUIBASE_PASSWORD=test
        - LIQUIBASE_DRIVER=com.mysql.cj.jdbc.Driver
        - LIQUIBASE_CLASSPATH=/mysql-connector-java-8.0.25.jar
        - LIQUIBASE_CHANGELOG=/liquibase/changelog-master.xml
      networks:
        - test
    grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - '3000:3000'
      depends_on:
        - influxdb
      environment:
        - GF_SECURITY_ADMIN_USER=grafana
        - GF_SECURITY_ADMIN_PASSWORD=grafana
      volumes:
        - grafana-storage:/var/lib/grafana
        - ./grafana/provisioning/dashboard:/etc/grafana/provisioning/dashboards
        - ./grafana/provisioning/datasource:/etc/grafana/provisioning/datasources
      networks:
        - test
    influxdb:
      container_name: influxdb
      image: influxdb:1.7.10-alpine
      ports:
        - '8086:8086'
      volumes:
        - influxdb-storage:/var/lib/influxdb
      networks:
        - test
      environment:
        - INFLUXDB_DB=db0
        - INFLUXDB_ADMIN_USER=adminn
        - INFLUXDB_ADMIN_PASSWORD=adminn
    prometheus:
      image: prom/prometheus
      container_name: prometheus
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
      networks:
        - test
    mailhog:
      image: mailhog/mailhog
      logging:
        driver: 'none'  # disable saving logs
      ports:
        - 1025:1025 # smtp server
        - 8025:8025 # web ui
      networks:
        - test
    rabbitmq:
      image: rabbitmq:management
      ports:
        - "5672:5672"
        - "15672:15672"
      environment:
        - RABBITMQ_DEFAULT_USER=user
        - RABBITMQ_DEFAULT_PASS=password
      networks:
        - test
      volumes:
        - rabbitmq-storage:/var/lib/rabbitmq
networks:
  test:
    external: true

volumes:
  rabbitmq-storage:
  influxdb-storage:
  grafana-storage:
  prometheus_data: